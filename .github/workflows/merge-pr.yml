###############################################################################
#        _       _             _   _            _____  _
#       | |     | |           | | | |          |  __ \(_)
#       | | ___ | |__  _ __   | |_| |__   ___  | |__) |_ _ __  _ __   ___ _ __
#   _   | |/ _ \| '_ \| '_ \  | __| '_ \ / _ \ |  _  /| | '_ \| '_ \ / _ \ '__|
#  | |__| | (_) | | | | | | | | |_| | | |  __/ | | \ \| | |_) | |_) |  __/ |
#   \____/ \___/|_| |_|_| |_|  \__|_| |_|\___| |_|  \_\_| .__/| .__/ \___|_|
#                                                       | |   | |
#                                                       |_|   |_|
#
# Copyright (c) 2024 Claudio Andr√© <dev@claudioandre.slmail.me>
#
# This program comes with ABSOLUTELY NO WARRANTY; express or implied.
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, as expressed in version 2, seen at
# http://www.gnu.org/licenses/gpl-2.0.html
###############################################################################
# GitHub Action that performs the actual merge
# More info at https://github.com/openwall/john-packages

---
name: doMerge

"on":
  workflow_call:
    inputs:
      branch:
        description: "The name of the branch to be merged."
        required: false
        type: string
      owner:
        description: "The owner of the repository the PR comes from"
        required: false
        type: string
      repo:
        description: "The name of the repository the PR comes from"
        required: false
        type: string
      pr-number:
        description: "The number of the PR to merge"
        required: true
        type: number
      request:
        description: "The command to be executed"
        required: true
        type: string

permissions:
  contents: read

jobs:
  merger:
    runs-on: ubuntu-latest

    permissions:
      contents: write
      pull-requests: write

    if: github.actor == 'claudioandre-br' || github.actor == 'solardiz'
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@4d991eb9b905ef189e4c376166672c3f2f230481 # v2.11.0
        with:
          disable-sudo: true
          egress-policy: block
          allowed-endpoints: >
            api.github.com:443
            github.com:443

      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0
          ref: main

      - name: GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJSON(github) }}
        run: echo "$GITHUB_CONTEXT"

      - name: Get PR info
        id: context
        run: |
          PR_URL="https://github.com/openwall/john-packages/pull/$PR_NUMBER"

          if [[ -z "${{ inputs.branch }}" ]]; then
            BRANCH="$(gh pr view "$PR_URL" --json headRefName        --jq '.headRefName')"
            OWNER="$(gh pr view "$PR_URL" --json headRepositoryOwner --jq '.headRepositoryOwner.login')"
            REPO="$(gh pr view "$PR_URL" --json headRepository       --jq '.headRepository.name')"
          else
            BRANCH="${{ inputs.branch }}"
            OWNER="${{ inputs.owner }}"
            REPO="${{ inputs.repo }}"
          fi

          if [[ "${{ inputs.request }}"  == "true" ]]; then
            REQUEST="bot: MERGE trial"
          elif [[ "${{ inputs.request }}"  == "false" ]]; then
            REQUEST="bot: MERGE"
          else
            REQUEST="${{ inputs.request }}"
          fi
          {
            echo "branch=$BRANCH"
            echo "owner=$OWNER"
            echo "repo=$REPO"
            echo "pr-url=$PR_URL"
            echo "request=$REQUEST"
          } >> "$GITHUB_OUTPUT"

        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PR_NUMBER: ${{ inputs.pr-number }}

      - name: Auto-merge PRs
        run: |
          export BRANCH="${{ steps.context.outputs.branch }}"
          export OWNER="${{ steps.context.outputs.owner }}"
          export REPO="${{ steps.context.outputs.repo }}"
          export PR_URL="${{ steps.context.outputs.pr-url }}"
          export REQUEST="${{ steps.context.outputs.request }}"

          source "./scripts/merge_procedures.sh" # @main

        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
